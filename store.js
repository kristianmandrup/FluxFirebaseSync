// Generated by LiveScript 1.2.0
/**
 * User: kmandrup
 * Date: 26/08/14
 * Time: 13:27
 */
(function(){
  var SyncStore;
  SyncStore = (function(){
    SyncStore.displayName = 'SyncStore';
    var prototype = SyncStore.prototype, constructor = SyncStore;
    function SyncStore(options){
      this.options = options != null
        ? options
        : {};
      this.class_name = this.options.class_name || 'Base';
    }
    prototype.repo = {
      validator: new ValidatorRepo,
      marshaller: new MarshallerRepo
    };
    prototype.validator = function(){
      return this._validator || (this._validator = this.options.validator || this.repo.validator.findFor(this.className));
    };
    prototype.marshaller = function(){
      return this._marshaller || (this._marshaller = this.options.marshaller || this.repo.marshaller.findFor(this.className));
    };
    prototype.update = function(operation, data){
      if (valid(data)) {
        return operation(data);
      }
    };
    prototype.validate = function(data){
      var result;
      result = validated(data);
      if (!_.empty(result.err)) {
        throw new Error("Invalid data: " + result.err);
      }
      return true;
    };
    prototype.validated = function(data){
      if (this.validator) {
        return this.validator.validate(data);
      } else {
        return true;
      }
    };
    prototype.marshal = function(data){
      if (this.marshaller) {
        return this.marshaller.marshal(data);
      } else {
        return data;
      }
    };
    prototype.unmarshal = function(data){
      if (this.marshaller) {
        return this.marshaller.unmarshal(data);
      } else {
        return data;
      }
    };
    return SyncStore;
  }());
}).call(this);
